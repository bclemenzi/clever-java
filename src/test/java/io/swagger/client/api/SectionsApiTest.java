/*
 * Data API
 * Serves the Clever Data API
 *
 * OpenAPI spec version: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CourseResponse;
import io.swagger.client.model.DistrictResponse;
import io.swagger.client.model.NotFound;
import io.swagger.client.model.SchoolResponse;
import io.swagger.client.model.SectionResponse;
import io.swagger.client.model.SectionsResponse;
import io.swagger.client.model.StudentsResponse;
import io.swagger.client.model.TeacherResponse;
import io.swagger.client.model.TeachersResponse;
import io.swagger.client.model.TermResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SectionsApi
 */
@Ignore
public class SectionsApiTest {

    private final SectionsApi api = new SectionsApi();

    /**
     * 
     *
     * Returns the course for a section
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCourseForSectionTest() throws ApiException {
        String id = null;
        CourseResponse response = api.getCourseForSection(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns the district for a section
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDistrictForSectionTest() throws ApiException {
        String id = null;
        DistrictResponse response = api.getDistrictForSection(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns the school for a section
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSchoolForSectionTest() throws ApiException {
        String id = null;
        SchoolResponse response = api.getSchoolForSection(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns a specific section
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSectionTest() throws ApiException {
        String id = null;
        SectionResponse response = api.getSection(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns a list of sections
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSectionsTest() throws ApiException {
        Integer limit = null;
        String startingAfter = null;
        String endingBefore = null;
        String count = null;
        SectionsResponse response = api.getSections(limit, startingAfter, endingBefore, count);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns the students for a section
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStudentsForSectionTest() throws ApiException {
        String id = null;
        Integer limit = null;
        String startingAfter = null;
        String endingBefore = null;
        StudentsResponse response = api.getStudentsForSection(id, limit, startingAfter, endingBefore);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns the primary teacher for a section
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTeacherForSectionTest() throws ApiException {
        String id = null;
        TeacherResponse response = api.getTeacherForSection(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns the teachers for a section
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTeachersForSectionTest() throws ApiException {
        String id = null;
        Integer limit = null;
        String startingAfter = null;
        String endingBefore = null;
        TeachersResponse response = api.getTeachersForSection(id, limit, startingAfter, endingBefore);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns the term for a section
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTermForSectionTest() throws ApiException {
        String id = null;
        TermResponse response = api.getTermForSection(id);

        // TODO: test validations
    }
}
